<?xml version="1.0" encoding="UTF-8"?>
<!-- Dernière modification
     le       $Date$
     par      $Author$
     révision $Revision$ -->

<sect1 id="installation">
<title>&slony1; Installation</title>

<indexterm><primary>installation instructions</primary></indexterm>

<note> <para>For &windows; users: Unless you are planning on hacking
the &slony1; code, it is highly recommended that you download and
install a prebuilt binary distribution and jump straight to the
configuration section below.  There are likely to be links and/or
binaries at <ulink url="http://pgfoundry.org/projects/slony1/">
pgFoundry &slony1; site </ulink> for official releases, the first of
which is expected to be &slony1; version 1.2.0.  </para>

<para> There are also RPM binaries available at that site for recent
versions of &slony1; for recent versions of &postgres;.
</para>
</note>

<warning><para> If you need &slony1; to do an upgrade from some
elderly version of &postgres; to a newer version, or if you need a
late-breaking CVS version, outside the context of a major release,
then be prepared to need to build both &postgres; and &slony1; from
source.  The remainder of this section assumes this...</para>
</warning>

<para>You should have obtained the &slony1; source from the previous
step. Unpack it.</para>

<screen>
gunzip slony.tar.gz;
tar xf slony.tar
</screen>

<para> This will create a directory under the current directory with
the &slony1; sources.  Head into that that directory for the rest of
the installation procedure.</para>

<sect2>
<title>Short Version</title>

<indexterm><primary> installation: short version </primary></indexterm>

<para>
<screen>
PGMAIN=/usr/local/pgsql746-freebsd-2005-04-01 \
./configure \
    --with-pgconfigdir=$PGMAIN/bin
gmake all; gmake install
</screen>
</para>
</sect2>

<sect2>
<title>Configuration</title>

<indexterm><primary>configuration instructions</primary></indexterm>

<para> &slony1; normally needs to be built and installed by the
&postgres; Unix user.  The installation target must be identical to
the existing &postgres; installation particularly in view of the fact
that several &slony1; components represent libraries and SQL scripts
that need to be in the &slony1; <filename>lib</filename> and
<filename>share</filename> directories. </para>

<para>The first step of the installation procedure is to configure the
source tree for your system.  This is done by running the
<application>configure</application> script.  In early versions,
<application>configure</application> needed to know where your
&postgres; source tree is, which was done with the
<option>--with-pgsourcetree=</option> option.  As of version 1.1, this
is no longer necessary, as &slony1; has included within its own code
base certain parts needed for platform portability.  It now only needs
to make reference to parts of &postgres; that are actually part of the
installation.  Therefore, &slony1; is configured by pointing it to the
various &postgres; library, binary, and include directories.  For a
full list of these options, use the command <command>./configure
--help</command>.</para>

<para> <emphasis>Normally,</emphasis> it ought to be sufficient to run
<command>configure
<option>--with-pgconfigdir=/some/path/somewhere</option></command>,
where <filename>/some/path/somewhere</filename> is the place where the
&postgres; program <application>pg_config</application> is located.
From <application>pg_config</application>, the
<filename>configure</filename> script can determine the various
locations where &postgres; components are found, which indicates where
the essential components of &slony1; must be installed.</para>

<para>On certain platforms (AIX and Solaris are known to need this;
Linux does not), the compile of &postgres; must be expressly
configured with the option <command>--enable-thread-safety</command>
to provide correct client libraries. </para>

<para> &postgres; version 8 installs the server header
<command>#include</command> files by default; with version 7.4 and
earlier, you need to make sure that the build installation included
doing <command>make install-all-headers</command>, otherwise the
server headers will not be installed, and &slony1; will be unable to
compile.</para>

<para>After running configure, you may wish to review the file
<filename>Makefile.global</filename> to ensure it is looking in the
right places for all of the components. </para>


</sect2>

<sect2>
<title>Example</title>

<para> After determining that the &postgres; instance to be used is
installed in
<filename>/opt/dbs/pgsql746-aix-2005-04-01</filename>:</para>

<screen>
PGMAIN=/opt/dbs/pgsql746-aix-2005-04-01 \
./configure \
    --with-pgconfigdir=$PGMAIN/bin 
</screen>

<para>The <application>configure</application> script will run a
number of tests to guess values for various dependent variables and
try to detect some quirks of your system.  &slony1; is known to need a
modified version of <application>libpq</application> on specific
platforms such as Solaris2.X on SPARC.  The patch for libpq version
7.4.2 can be found at <ulink id="threadpatch" url=
"http://developer.postgresql.org/~wieck/slony1/download/threadsafe-libpq-742.diff.gz">
http://developer.postgresql.org/~wieck/slony1/download/threadsafe-libpq-742.diff.gz
</ulink> Similar patches may need to be constructed for other
versions; see the FAQ entry on <link linkend="threadsafety"> thread
safety </link>. </para>

<para> For a full listing of configuration options, run the command
<command>./configure --help</command>.</para>
</sect2>

<sect2>
<title>Build</title>

<para>To start the build process, type

<screen>
gmake all
</screen></para>

<para> Be sure to use GNU make; on BSD systems, it is called
<application>gmake</application>; on Linux, GNU make is typically the
<quote>native</quote> <application>make</application>, so the name of
the command you type in may be either <command>make</command> or
<command>gmake</command>.  On other platforms, you may need additional
packages or even install GNU make from scratch.  The build may take
anywhere from a few seconds to 2 minutes depending on how fast your
hardware is at compiling things.  The last line displayed should
be</para>

<para> <command> All of Slony-I is successfully made.  Ready to
install.  </command></para>
</sect2>

<sect2>
<title> Installing &slony1; Once Built</title>

<para> To install &slony1;, enter

<command>
gmake install
</command></para>

<para>This will install files into the postgresql install directory as
specified by the <command>configure</command>
<option>--prefix</option> option used in the &postgres; installation.
Make sure you have appropriate permissions to write into that area.
Commonly you need to do this either as root or as the postgres user.
</para>

<para>The main list of files installed within the PostgreSQL instance is:</para>
<itemizedlist>
<listitem><para><filename> $bindir/slon</filename></para></listitem>
<listitem><para><filename> $bindir/slonik</filename></para></listitem>
<listitem><para><filename> $libdir/slony1_funcs$(DLSUFFIX)</filename></para></listitem>
<listitem><para><filename> $libdir/xxid($DLSUFFIX)</filename></para></listitem>
<listitem><para><filename> $datadir/slony1_base.sql</filename></para></listitem>
<listitem><para><filename> $datadir/slony1_base.v73.sql</filename></para></listitem>
<listitem><para><filename> $datadir/slony1_base.v74.sql</filename></para></listitem>
<listitem><para><filename> $datadir/slony1_base.v80.sql</filename></para></listitem>
<listitem><para><filename> $datadir/slony1_funcs.sql</filename></para></listitem>
<listitem><para><filename> $datadir/slony1_funcs.v73.sql</filename></para></listitem>
<listitem><para><filename> $datadir/slony1_funcs.v74.sql</filename></para></listitem>
<listitem><para><filename> $datadir/slony1_funcs.v80.sql</filename></para></listitem>
</itemizedlist>

<para> (Note that as things change, the list of version-specific files
may grow...) </para>

<para>The <filename>.sql</filename> files are not fully substituted
yet.  And yes, both the 7.3, 7.4 and the 8.0 files get installed on every
system, irrespective of its version.  The <xref linkend="slonik"/>
admin utility does namespace/cluster substitutions within these files,
and loads the files when creating replication nodes.  At that point in
time, the database being initialized may be remote and may run a
different version of &postgres; than that of the local host.</para>

<para> At the very least, the two shared objects installed in the
<filename>$libdir</filename> directory must be installed onto every
computer that is supposed to become a &slony1; node. (Other components
may be able to be loaded remotely from other hosts.) </para>

</sect2>

<sect2> <title> Building Documentation: Admin Guide </title>

<indexterm><primary> building &slony1; documentation </primary></indexterm>

<para> The document you are reading now is a fairly extensive
<quote>Administrator's Guide</quote> containing what wisdom has been
discovered and written down about the care and feeding of &slony1;.</para>

<para> This is only built if you specify <command>--with-docs</command></para>

<para> Note that you may have difficulty building the documentation on Red
Hat-based systems due to NAMELEN being set way too low.  Havoc
Pennington opened a bug on this back in mid-2001, back in the days of
Red Hat 7.1; Red Hat Software has assigned the bug, but there does not
appear to have been much progress since then.  The second URL below
indicates that there is intent to address the issue by bumping up the
value of NAMELEN in some future release of Red Hat Enterprise Linux,
but that won't likely help you in 2008.  Fedora Core 4 should have the
issue addressed somewhat sooner. </para>

<para>
<ulink url=
"https://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=36058"> Bug
36058 </ulink> </para>

<para>
<ulink url=
"https://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=159382"> Bug
159382 (For RHEL) </ulink> </para>

<para>A pre-built copy of the "admin guide" should be readily available,
either in the form of a separate tarball nearby, or in the directory
<filename>doc/adminguide/prebuilt</filename> </para>

<para> See the <filename>INSTALL</filename> file for a workaround for
Fedora...</para>

</sect2>

<sect2>
<title> Installing &slony1; from RPMs</title>

<para> Even though &slony1; can be compiled and run on most Linux
distributions, it is also possible to install &slony1; using binary
packages. Slony Global Development Team provides official RPMs and
SRPMs for many versions or Red Hat ana Fedora Core.</para>

<para>The RPMs are available at <ulink
url="http://pgfoundry.org/projects/slony1/"> &slony1; at pgFoundry.org
</ulink>. Please read <command> CURRENT_MAINTAINER</command> file for
the details of the RPMs. Please note that the RPMs will look for RPM
installation of &postgres;, so if you install &postgres; from source,
you should manually ignore the RPM dependencies related to
&postgres;.</para>

<para>Installing &slony1; using these RPMs is as easy as 
installing any RPM.</para>

<screen>rpm -ivh postgresql-slony1-engine-....rpm</screen>

<para>If you want to upgrade the previous version, just use 
<command>rpm -Uvh</command> to upgrade it. But please remember to follow 
the usual upgrade procedure, too.</para>

<para>The RPM installs the files into their usual places. The
configuration files are installed under <filename>/etc</filename>, the
binary files are installed in <filename>/usr/bin</filename>, libraries
are installed in <filename>/usr/lib/pgsql</filename>, and finally the
docs are installed in
<filename>/usr/share/doc/postgresql-slony1-engine</filename>.</para>

</sect2>

<sect2>
<title> Installing the &slony1; service on &windows;</title>

<indexterm><primary>installing &slony1; on &windows;</primary></indexterm>

<para> On &windows; systems, instead of running one <xref
linkend="slon"/> daemon per node, a single slon service is installed
which can then be controlled through the <command>Services</command>
control panel applet, or from a command prompt using the
<command>net</command> command.</para>

<screen>
C:\Program Files\PostgreSQL\8.0\bin> slon -regservice my_slon
Service registered.
Before you can run Slony, you must also register an engine!

WARNING! Service is registered to run as Local System. You are
encouraged to change this to a low privilege account to increase
system security. 
</screen>

<para> Once the service is installed, individual nodes can be setup
by registering slon configuration files with the service.</para>

<screen>
C:\Program Files\PostgreSQL\8.0\bin> slon -addengine c:\node1.conf
Engine added.
</screen>

<para>Other, self explanatory commands include <command>slon -unregservice 
&lt;service name&gt;</command>, <command>slon -listengines 
&lt;service name&gt;</command> and <command>slon -delengine 
&lt;service name&gt; &lt;config file&gt;</command>.</para> 

<para> For further information about the &windows; port, you may want
to see the following URLs: </para>

<itemizedlist>

<listitem><para> <ulink
url="http://developer.pgadmin.org/~hiroshi/Slony-I/"> Slony-I Windows
installer sample </ulink> </para> </listitem>

<listitem><para> <ulink url=
"http://people.planetpostgresql.org/xzilla/index.php?/archives/200-Alpha-testing-Slony-on-win32-Crib-Notes.html">
xzilla's Alpha testing Slony on win32 Crib Notes </ulink> </para> </listitem>

</itemizedlist>

</sect2>

</sect1>
