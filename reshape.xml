<?xml version="1.0" encoding="UTF-8"?>
<!-- Dernière modification
     le       $Date$
     par      $Author$
     révision $Revision$ -->

<sect1 id="reshape"> <title>Restructure un cluster</title>

<indexterm><primary>restructurer une réplication</primary></indexterm>

<para>Si vous réarranger les noeuds afin de qu'ils remplissent une fonction 
  différente, cela implique en général de modifier un peu les noeuds abonnés.
  </para>

<para>Cela nécessitera les plusieurs choses :
<itemizedlist>

<listitem><para> Si vous voulez qu'un noeud abonné devienne l'origine d'un
    ensemble de réplication, vous devez effectuer une opération 
    <xref linkend="slonik"/> <command>MOVE SET</command>
    appropriée.</para></listitem>

<listitem><para> Vous pouvez ensuite, ou à la place, modifier les
    abonnements des autres noeuds. Vous pouvez modifier un noeud 
    pour obtenir les données depuis un fournisseur différent, ou le changer
    pour activer ou désactiver le transfert des données. Cela s'accomplit 
    en tapant l'opération slonik <xref
linkend="stmtsubscribeset"/> avec les nouvelles information d'abonnement
    pour le noeud;  &slony1; changera la configuration; inutile de lancer 
    <xref linkend="stmtunsubscribeset"/>; inutile de recopier 
    les données depuis zéro; la requête modifiera l'abonnement 
    <quote>à la volée</quote> et préservera la cohérence des données
    entre les noeuds.</para></listitem>

<listitem><para> Si les flux de données ont changé de direction, il 
    est inévitable de lancer une série d'opérations  <xref
linkend="stmtdroplisten"/> operations afin de supprimer les
    chemins obsolètes entre les noeuds et <xref linkend="stmtstorelisten"/> 
    pour ajouter les nouveaux chemins. 
    Jusqu'à la version 1.1, ceci n'était pas modifié automatiquement; 
    depuis la version 1.1,  <xref linkend="stmtmoveset"/> et <xref
linkend="stmtsubscribeset"/> change les chemins automatiquement.
    Voir <xref linkend="listenpaths"/> pour plus d'information à ce propos.
    Dans les versions 1.1 et suivantes, la génération des entrées de la table
    <xref linkend="table.sl-listen"/> est entièrement automatisée, elles sont 
    donc régénérées lorsqu'un changement est effectué sur les tables  <xref linkend="table.sl-path"/> 
    ou <xref linkend="table.sl-subscribe"/>, rendant ainsi inutile de se préoccuper de 
    <xref linkend="stmtstorelisten"/>.</para></listitem>

</itemizedlist>
</para>
<para> Les outils <filename>altperl</filename> incluent un script 
<application>regenerate-listens</application> qui est permet de créer 
les nouvelles commande <xref linkend="stmtstorelisten"/>; 
cependant il n'est pas assez malin pour déterminer quels chemins doivent être supprimés.
</para>

</sect1>
