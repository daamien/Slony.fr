<?xml version="1.0" encoding="UTF-8"?>
<!-- Dernière modification
     le       $Date$
     par      $Author$
     révision $Revision$ -->

<sect1 id="reshape"> <title>Reshaping a Cluster</title>

<indexterm><primary>reshaping replication</primary></indexterm>

<para>If you rearrange the nodes so that they serve different
purposes, this will likely lead to the subscribers changing a bit.</para>

<para>This will require doing several things:
<itemizedlist>

<listitem><para> If you want a node that is a subscriber to become the
origin for a particular replication set, you will have to issue a
suitable <xref linkend="slonik"/> <command>MOVE SET</command>
operation.</para></listitem>

<listitem><para> You may subsequently, or instead, wish to modify the
subscriptions of other nodes.  You might want to modify a node to get
its data from a different provider, or to change it to turn forwarding
on or off.  This can be accomplished by issuing the slonik <xref
linkend="stmtsubscribeset"/> operation with the new subscription
information for the node; &slony1; will change the configuration.  No
need to ask for <xref linkend="stmtunsubscribeset"/>; no need for it to
start copying data from scratch; the <xref linkend="stmtsubscribeset"/>
request will reshape the subscription <quote>on the fly</quote> and
allow data to remain consistent between nodes.  </para></listitem>

<listitem><para> If the directions of data flows have changed, it is
doubtless appropriate to issue a set of <xref
linkend="stmtdroplisten"/> operations to drop out obsolete paths
between nodes and <xref linkend="stmtstorelisten"/> to add the new
ones.  Up until version 1.1, this was not changed automatically; as of
1.1, <xref linkend="stmtmoveset"/> and <xref
linkend="stmtsubscribeset"/> change the paths as a side-effect.  See
<xref linkend="listenpaths"/> for more information about this.  In
version 1.1 and later, generation of <xref linkend="table.sl-listen"/>
entries is entirely automated, so that they are regenerated when
changes are made to <xref linkend="table.sl-path"/> or <xref
linkend="table.sl-subscribe"/>, thereby making it unnecessary to even think
about <xref linkend="stmtstorelisten"/>.</para></listitem>

</itemizedlist>
</para>
<para> The <filename>altperl</filename> toolset includes a
<application>regenerate-listens</application> script that is up to
the task of creating the new <xref linkend="stmtstorelisten"/>
commands; it isn't, however, smart enough to know what listener paths
should be dropped.
</para>

</sect1>
